## Module containing checks performed on a SampleSheet file for Illumina sequencers

def check_run_name_free_to_use(run_name, sequencer):
    ## Function checks whether run_name is already used in the database.
    ## Error page is shown if run_name is already  defined
    ##

    #import pdb; pdb.set_trace()
    is_run_name_free_result='KO in check_run_name_free_to_use()'
    if (RunProcess.objects.filter(runName = run_name)).exists():
        if RunProcess.objects.filter(runName = run_name, runState__exact ='Pre-Recorded'):
            if(sequencer == 'NextSeq'):
                ## Delete (for NextSeq, the sample sheet file and) the row in database
                delete_run = RunProcess.objects.filter(runName = run_name, runState__exact ='Pre-Recorded')
                sample_sheet_file = str(delete_run[0].sampleSheet)
                #import pdb; pdb.set_trace()
                full_path_sample_sheet_file = os.path.join(settings.MEDIA_ROOT, sample_sheet_file)
                os.remove(full_path_sample_sheet_file)
                delete_run[0].delete()
                is_run_name_free_result='Free'
            else:# != NextSeq i
                #if not input form needed, run enters the system at "Recorded" state directly)
                is_run_name_free_result='Error: unexpected behaviour for: '+sequencer
        else:#runState != 'Pre-Recorded'
            is_run_name_free_result=['Run Name is already used. ',
                                  'Run Name must be unique in database.', ' ',
                                  'ADVICE:',
                                  'Change the value in the Sample Sheet  file ']
    else: # run_name is new
        is_run_name_free_result='Free'
    return is_run_name_free_result



def check_existence_projects_in_run(samplesheet)
    ## Check that there are indeed projects within the run
    project_list=get_projects_in_run(samplesheet)
    message_output='Error: unexpected behaviour'
    number_projects_in_run=len (project_list)

    if number_projects_in_run == 0 :
        message_output=[
            'Sample Sheet does not contain "Sample project" and/or "Description" fields',
            '', 'ADVICE:',
            'Check that csv file generated by Illumina Experient Manager'
            ' (IEM) includes these columns']
    return (number_projects_in_run,message_output)



def check_existence_run_users(project_list):

    check_existence_run_users_result='ERROR when executing: check_existence_run_usersxx()'

    ...

    return check_existence_run_users_result






def check_existence_run_projects(project_list)
    ## Check that the projects are already defined in the database

    check_existence_run_projects_result='ERROR when executing: check_existence_run_projects()'

    ...

    return check_existence_run_projects_result
